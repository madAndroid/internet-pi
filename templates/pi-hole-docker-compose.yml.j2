# {{ ansible_managed }}
---
version: "3.5"

networks:
  pihole_network:                         # Name of network
    driver: macvlan                       # Use the macvlan network driver
    driver_opts:
      parent: eth0                    # If open vSwitch is disabled use eth0 (or eth1 +)
    ipam:
      config:
        - subnet: "192.168.88.0/24"        # Specify subnet
          gateway: "192.168.88.1"          # Gateway address
          ip_range: "192.168.88.0/24"    # Available IP addresses


# More info at https://github.com/pi-hole/docker-pi-hole/ and https://docs.pi-hole.net/
services:
  pihole:
    container_name: pihole
    image: pihole/pihole:latest
    hostname: '{{ pihole_hostname }}'
    ports:
      - 53/tcp
      - 53/udp
      - 67/udp
      - 8080/tcp
    environment:
      TZ: '{{ pihole_timezone }}'
      WEBPASSWORD: '{{ pihole_password }}'
      ServerIP: '{{ ansible_facts['default_ipv4']['address'] }}'
    networks:
      pihole_network:
        ipv4_address: 192.168.88.111
    dns:
      - 127.0.0.1
      - 8.8.8.8
    volumes:
      - './etc-pihole/:/etc/pihole/'
      - './etc-dnsmasq.d/:/etc/dnsmasq.d/'
    cap_add:
      - NET_ADMIN
{% if domain_name_enable and domain_name %}
    # adds hostname mappings to pihole /etc/hosts file
    extra_hosts:
      # # LAN hostnames for other docker containers using nginx-proxy
      - "{{ domain_name }}:{{ ansible_facts['default_ipv4']['address'] }}"
{% if domain_name_enable and domain_name and domain_pihole %}
      - "{{ domain_pihole }}.{{ domain_name }}:{{ ansible_facts['default_ipv4']['address'] }}"
{% endif %}
{% if domain_name_enable and domain_name and domain_grafana %}
      - "{{ domain_grafana }}.{{ domain_name }}:{{ ansible_facts['default_ipv4']['address'] }}"
{% endif %}
{% if domain_name_enable and domain_name and domain_prometheus %}
      - "{{ domain_prometheus }}.{{ domain_name }}:{{ ansible_facts['default_ipv4']['address'] }}"
{% endif %}
{% endif %}
    restart: unless-stopped

  pihole-exporter:
    container_name: pihole-exporter
    image: ekofr/pihole-exporter:latest
    hostname: 'pihole-exporter'
    ports:
      - "9617:9617"
    environment:
      PIHOLE_HOSTNAME: '{{ pihole_hostname }}'
      PIHOLE_PASSWORD: '{{ pihole_password }}'
      INTERVAL: '30s'
      PORT: 9617
    restart: unless-stopped
