# {{ ansible_managed }}
---

volumes:
  prometheus_data: {}
  grafana_data: {}

networks:
  front-tier:
    name: internet-monitoring-front-tier
  back-tier:
    name: internet-monitoring-back-tier

services:
{% if domain_name_enable %}
  nginx-proxy:
    image: nginxproxy/nginx-proxy:latest
    restart: always
    ports:
      - "80:80"
    networks:
      - back-tier
      - front-tier
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/tmp/docker.sock:ro
{% endif %}

  prometheus:
    dns:
      - 8.8.8.8
      - 8.8.4.4
    image: prom/prometheus:v2.44.0
    restart: always
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ./prometheus/:/etc/prometheus/
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.enable-admin-api'
      - '--storage.tsdb.retention.time={{ prometheus_tsdb_retention_time }}'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - 9090:9090
    links:
      - ping:ping
      - speedtest:speedtest
    networks:
      - back-tier
{% if domain_name_enable and domain_name and domain_prometheus %}
    depends_on:
      - nginx-proxy
    environment:
      - VIRTUAL_HOST={{ domain_prometheus }}.{{ domain_name }}
      - VIRTUAL_PORT=9090
{% endif %}

  alertmanager:
    dns:
      - 8.8.8.8
      - 8.8.4.4
    image: prom/alertmanager:v0.24.0
    restart: always
    ports:
      - "9093:9093"
    depends_on:
      - prometheus
    volumes:
      - ./alertmanager/:/config
      #- alertmanager_data:/data
    command:
      - '--config.file=/config/alertmanager.yml'
      - '--log.level=debug'
    networks:
      - back-tier

  loki:
    dns:
      - 8.8.8.8
      - 8.8.4.4
    image: grafana/loki:2.9.4
    restart: always
    command: -config.file=/etc/loki/local-config.yaml
    volumes:
      - /etc/localtime:/etc/localtime:ro
    depends_on:
      - prometheus
    ports:
      - 3100:3100
    networks:
      - back-tier

  grafana:
    dns:
      - 8.8.8.8
      - 8.8.4.4
    image: grafana/grafana:9.5.3
    restart: always
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning/:/etc/grafana/provisioning/
    depends_on:
      - prometheus
    ports:
      - 3030:3000
    env_file:
      - ./grafana/config.monitoring
    networks:
      - back-tier
      - front-tier
{% if domain_name_enable and domain_name and domain_grafana %}
    depends_on:
      - nginx-proxy
    environment:
      - VIRTUAL_HOST={{ domain_grafana }}.{{ domain_name }}
      - VIRTUAL_PORT=3000
{% endif %}

  ping:
    image: prom/blackbox-exporter:latest
    restart: always
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ./blackbox/config:/config
    dns:
      - 8.8.8.8
      - 8.8.4.4
    expose:
      - 9115
    ports:
      - 9115:9115
    tty: true
    stdin_open: true
    command:
      - '--config.file=/config/blackbox.yml'
    networks:
      - back-tier

  speedtest:
    image: miguelndecarvalho/speedtest-exporter:v3.5.1
    restart: always
    environment:
      - TZ='Africa/Johannesburg'
    dns:
      - 8.8.8.8
      - 8.8.4.4
    expose:
      - 9798
    ports:
      - 9798:9798
    networks:
      - back-tier

  shelly:
    image: madandroid/shelly-prometheus-exporter:0.3.7
    restart: always
    volumes:
      - ./shelly/config.yaml:/app/config.yaml
    dns:
      - 8.8.8.8
      - 8.8.4.4
    expose:
      - 9123
    ports:
      - 9123:9123
    networks:
      - back-tier

  unpoller:
    image: ghcr.io/unpoller/unpoller:v2.9.2
    restart: always
    ports:
      - '9130:9130'
    container_name: unpoller
    networks:
      - back-tier
    environment:
      - UP_INFLUXDB_DISABLE=true
      - UP_POLLER_DEBUG=false
      - UP_UNIFI_DYNAMIC=false
      - UP_PROMETHEUS_HTTP_LISTEN=0.0.0.0:9130
      - UP_PROMETHEUS_NAMESPACE=unpoller
      - UP_UNIFI_CONTROLLER_0_USER=hass
      - UP_UNIFI_CONTROLLER_0_PASS=Dr01dHAaccPW
      - UP_UNIFI_CONTROLLER_0_SAVE_ALARMS=true
      - UP_UNIFI_CONTROLLER_0_SAVE_ANOMALIES=true
      - UP_UNIFI_CONTROLLER_0_SAVE_DPI=true
      - UP_UNIFI_CONTROLLER_0_SAVE_EVENTS=true
      - UP_UNIFI_CONTROLLER_0_SAVE_IDS=true
      - UP_UNIFI_CONTROLLER_0_SAVE_SITES=true
      - UP_UNIFI_CONTROLLER_0_URL=https://192.168.88.1

#  nodeexp:
#    privileged: true
#    container_name: pihole.int.stangl.co.za
#    image: prom/node-exporter
#    volumes:
#      - /proc:/host/proc:ro
#      - /sys:/host/sys:ro
#      - /:/rootfs:ro
#    ports:
#      - 9100:9100
#    restart: always
#    command:
#      - '--path.procfs=/host/proc'
#      - '--path.sysfs=/host/sys'
#      - --collector.filesystem.ignored-mount-points
#      - "^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)"
#    networks:
#      - back-tier
